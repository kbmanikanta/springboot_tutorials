package com.samplepoc.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.samplepoc.service.Consumer;

@RestController
public class KafkaController {

	@Autowired
	Consumer consumer;
	
	@GetMapping(value = "/get")
	public void recieveMessage(@RequestParam("msg") String msg) {
		consumer.consumerFromTopic("");
	}
}



package com.samplepoc.service;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;

@Service
public class Consumer {
	
	@KafkaListener(topics="",groupId = "")
	public String consumerFromTopic(String message) {
       System.out.println("Consumed Message" + message);
       return message;
	}
}



public class KafkaJsonSerializer implements Serializer {

    private Logger logger = LogManager.getLogger(this.getClass());

    @Override
    public void configure(Map map, boolean b) {

    }

    @Override
    public byte[] serialize(String s, Object o) {
        byte[] retVal = null;
        ObjectMapper objectMapper = new ObjectMapper();
        try {
            retVal = objectMapper.writeValueAsBytes(o);
        } catch (Exception e) {
            logger.error(e.getMessage());
        }
        return retVal;
    }

    @Override
    public void close() {

    }
}



public class KafkaJsonDeserializer<T> implements Deserializer {

    private Logger logger = LogManager.getLogger(this.getClass());

    private Class <T> type;

    public KafkaJsonDeserializer(Class type) {
        this.type = type;
    }

    @Override
    public void configure(Map map, boolean b) {

    }

    @Override
    public Object deserialize(String s, byte[] bytes) {
        ObjectMapper mapper = new ObjectMapper();
        T obj = null;
        try {
            obj = mapper.readValue(bytes, type);
        } catch (Exception e) {

            logger.error(e.getMessage());
        }
        return obj;
    }

    @Override
    public void close() {

    }
}


https://www.javatpoint.com/creating-kafka-consumer-in-java

https://kafka.apache.org/10/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html

https://github.com/chargeahead/SpringBootKafka
